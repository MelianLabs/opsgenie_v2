=begin
#OpsGenie REST API

#OpsGenie OpenAPI Specification

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpsgenieClient::TeamApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TeamApi' do
  before do
    # run before each test
    @instance = OpsgenieClient::TeamApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TeamApi' do
    it 'should create an instance of TeamApi' do
      expect(@instance).to be_instance_of(OpsgenieClient::TeamApi)
    end
  end

  # unit tests for create_team
  # Create Team
  # Creates a new team
  # @param body Request payload of created team
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'create_team test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_team
  # Delete Team
  # Delete team with given id or name
  # @param identifier Identifier of the team
  # @param [Hash] opts the optional parameters
  # @option opts [String] :identifier_type Type of the identifier. Possible values are &#39;id&#39; and &#39;name&#39;. Default value is &#39;id&#39;
  # @return [SuccessResponse]
  describe 'delete_team test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_team
  # Get Team
  # Returns team with given &#39;id&#39; or &#39;name&#39;
  # @param identifier Identifier of the team
  # @param [Hash] opts the optional parameters
  # @option opts [String] :identifier_type Type of the identifier. Possible values are &#39;id&#39; and &#39;name&#39;. Default value is &#39;id&#39;
  # @return [GetTeamResponse]
  describe 'get_team test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_team_logs
  # List Team Logs
  # Return logs of a team given with identifier
  # @param identifier Identifier of the team
  # @param [Hash] opts the optional parameters
  # @option opts [String] :identifier_type Type of the identifier. Possible values are &#39;id&#39; and &#39;name&#39;. Default value is &#39;id&#39;
  # @option opts [Integer] :limit Maximum number of items to provide in the result. Must be a positive integer value.
  # @option opts [String] :order Sorting order of the result set
  # @option opts [String] :offset Key which will be used in pagination
  # @return [ListTeamLogsResponse]
  describe 'list_team_logs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_teams
  # List Teams
  # Return list of teams
  # @param [Hash] opts the optional parameters
  # @return [ListTeamsResponse]
  describe 'list_teams test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_team
  # Update Team (Partial)
  # Update team with given id
  # @param identifier Identifier of the team
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateTeamPayload] :body Request payload of update team action
  # @return [SuccessResponse]
  describe 'update_team test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

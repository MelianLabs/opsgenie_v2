=begin
#OpsGenie REST API

#OpsGenie OpenAPI Specification

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpsgenieClient::IntegrationApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'IntegrationApi' do
  before do
    # run before each test
    @instance = OpsgenieClient::IntegrationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of IntegrationApi' do
    it 'should create an instance of IntegrationApi' do
      expect(@instance).to be_instance_of(OpsgenieClient::IntegrationApi)
    end
  end

  # unit tests for authenticate_integration
  # Authenticate Integration
  # Authenticates integration with given type
  # @param body Request payload to authenticate integration
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'authenticate_integration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_integration
  # Create Integration
  # Creates a new integration
  # @param body Request payload of created integration
  # @param [Hash] opts the optional parameters
  # @return [CreateIntegrationResponse]
  describe 'create_integration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_integration
  # Delete Integration
  # Delete integration with given id
  # @param id Integration Id
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'delete_integration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for disable_integration
  # Disable Integration
  # Disable integration with given ID
  # @param id Integration Id
  # @param [Hash] opts the optional parameters
  # @return [DisableIntegrationResponse]
  describe 'disable_integration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enable_integration
  # Enable Integration
  # Enable integration with given ID
  # @param id Integration Id
  # @param [Hash] opts the optional parameters
  # @return [EnableIntegrationResponse]
  describe 'enable_integration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_integration
  # Get Integration
  # Returns integration with given id
  # @param id Integration Id
  # @param [Hash] opts the optional parameters
  # @return [GetIntegrationResponse]
  describe 'get_integration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_integrations
  # List Integrations
  # Returns list of integrations with given parameters
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type Type of the integration (For instance, \&quot;API\&quot; for API Integration). If type parameter is given, the result will be filtered by type
  # @option opts [String] :team_id The ID of the team. If the team ID parameter is given, the result will be filtered by teamId
  # @option opts [String] :team_name The name of the team. If the team name parameter is given, the result will be filtered by teamName
  # @return [ListIntegrationsResponse]
  describe 'list_integrations test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_integration
  # Update Integration
  # Update integration with given id
  # @param id Integration Id
  # @param body Request payload of update integration action
  # @param [Hash] opts the optional parameters
  # @return [UpdateIntegrationResponse]
  describe 'update_integration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

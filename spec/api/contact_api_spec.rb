=begin
#OpsGenie REST API

#OpsGenie OpenAPI Specification

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpsgenieClient::ContactApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ContactApi' do
  before do
    # run before each test
    @instance = OpsgenieClient::ContactApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContactApi' do
    it 'should create an instance of ContactApi' do
      expect(@instance).to be_instance_of(OpsgenieClient::ContactApi)
    end
  end

  # unit tests for create_contact
  # Create Contact
  # Creates a new contact
  # @param identifier Identifier of the user to be searched
  # @param [Hash] opts the optional parameters
  # @option opts [CreateContactPayload] :body Request payload of creating contact action
  # @return [SuccessResponse]
  describe 'create_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_contact
  # Delete Contact
  # Delete contact using contact id
  # @param identifier Identifier of the user to be searched
  # @param contact_id Id of the contact
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'delete_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for disable_contact
  # Disable Contact
  # Disable the contact of the user
  # @param identifier Identifier of the user to be searched
  # @param contact_id Id of the contact
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'disable_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enable_contact
  # Enable Contact
  # Enable the contact of the user
  # @param identifier Identifier of the user to be searched
  # @param contact_id Id of the contact
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'enable_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_contact
  # Get Contact
  # Returns contact with given id
  # @param identifier Identifier of the user to be searched
  # @param contact_id Id of the contact
  # @param [Hash] opts the optional parameters
  # @return [GetContactResponse]
  describe 'get_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_contacts
  # List Contacts
  # Returns list of contacts
  # @param identifier Identifier of the user to be searched
  # @param [Hash] opts the optional parameters
  # @return [ListContactsResponse]
  describe 'list_contacts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_contact
  # Update Contact (Partial)
  # Update contact of the user
  # @param identifier Identifier of the user to be searched
  # @param contact_id Id of the contact
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateContactPayload] :body Request payload of update contact action
  # @return [SuccessResponse]
  describe 'update_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
